@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="OpenLayers" />
    <title>TestPNG</title>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "Microsoft YaHei"
        }

        .mapDiv {
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <canvas id="canvas"></canvas>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        Array.prototype.pip = function (x, y) {
            var i, j, c = false;
            for (i = 0, j = this.length - 1; i < this.length; j = i++) {
                if (((this[i][1] > y) != (this[j][1] > y)) &&
                    (x < (this[j][0] - this[i][0]) * (y - this[i][1]) / (this[j][1] - this[i][1]) + this[i][0])) {
                    c = !c;
                }
            }
            return c;
        }
        var extent = [73.2, 17.8, 135.4, 53.8];
        //var extent = [109.46, 20.05, 117.48, 25.63];
        //var extent = [112.94, 22.49, 114.1, 23.97];
        var resolution = (extent[2] - extent[0]) / 1023;
        var width = Math.round((extent[2] - extent[0]) / resolution) + 1, height = Math.round((extent[3] - extent[1]) / resolution) + 1;
        var canvas = document.getElementById('canvas');
        canvas.width = width;
        canvas.height = height;
        var ctx = canvas.getContext("2d");
        $.getJSON("/Scripts/china.json", function (result) {
            var china = result;
            var polygons = [];
            for (var h = 0; h < china.features.length; h++) {
                if (china.features[h].geometry.type == "MultiPolygon") {
                    var coordinates = china.features[h].geometry.coordinates;
                    for (var i = 0; i < coordinates.length; i++) {
                        var polygonsT = coordinates[i];
                        for (var j = 0; j < polygonsT.length; j++) {
                            var points = polygonsT[j];
                            polygons.push(points);
                        }
                    }
                } else {
                    var polygonsT = china.features[h].geometry.coordinates;
                    for (var j = 0; j < polygonsT.length; j++) {
                        var points = polygonsT[j];
                        polygons.push(points);
                    }
                }
            }
            for (var i = 0; i < width; i++) {
                var lon = extent[0] + i * resolution;
                for (var j = 0; j < height; j++) {
                    var lat = extent[3] - j * resolution;
                    var isIn = false;
                    for (var k = 0; k < polygons.length; k++) {
                        var points = polygons[k];
                        if (points.pip(lon, lat)) {
                            isIn = true;
                            break;
                        }
                    }
                    if (isIn) {
                        ctx.fillStyle = 'rgb(255,0,0)';
                    } else {
                        ctx.fillStyle = 'rgb(0,0,0)';
                    }
                    ctx.fillRect(i, j, 1, 1);
                }
            }
            console.log(canvas.toDataURL());
        });
    </script>
</body>
</html>
