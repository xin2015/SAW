
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Measure</title>
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/turf.js"></script>
    <style>
        html, body, #map {
            margin: 0;
            padding: 0;
            overflow: hidden;
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <div id="map" class="map"></div>
    <script>
        var projection = ol.proj.get('EPSG:3857');
        var projectionExtent = projection.getExtent();
        var size = ol.extent.getWidth(projectionExtent) / 256;
        var maxZoom = 18;
        var matrixIds = [];
        var resolutions = [];
        for (var i = 0; i <= maxZoom; i++) {
            matrixIds[i] = [i];
            resolutions[i] = size / Math.pow(2, i);
        }

        function styleFunction(feature) {
            var tem = feature.get("temperature");
            var colors = ["#5a9fdd", "#f7eb0c", "#fc9e10", "#f81e0d", "#aa2ab3"];
            var color = colors[parseInt(tem / 2)];
            return new ol.style.Style({
                fill: new ol.style.Fill({
                    color: color
                }),
                stroke: new ol.style.Stroke({
                    color: color,
                    width: 4
                }),
                image: new ol.style.Circle({
                    radius: 5,
                    fill: new ol.style.Fill({
                        color: color
                    }),
                    stroke: new ol.style.Stroke({
                        color: '#fff',
                        width: 1
                    })
                })
            });
        }

        // create a grid of points with random z-values in their properties
        var extent = [0, 0, 100, 50];
        var cellWidth = 10;
        //var pointGrid = turf.pointGrid(extent, cellWidth, { units: 'miles' });//'degrees', 'imperial', 'nautical', 'metric', 'us'
        var pointGrid = turf.pointGrid(extent, cellWidth, { units: 'degrees' });
        console.log(pointGrid);
        for (var i = 0; i < pointGrid.features.length; i++) {
            pointGrid.features[i].properties.temperature = Math.random() * 10;
        }
        var breaks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
        console.time("isolines");
        var lines = turf.isolines(pointGrid, breaks, { zProperty: 'temperature' });
        console.timeEnd("isolines");
        //var _lFeatures = lines.features;
        //for (var i = 0; i < _lFeatures.length; i++) {
        //    var _coords = _lFeatures[i].geometry.coordinates;
        //    var _lCoords = [];
        //    for (var j = 0; j < _coords.length; j++) {
        //        var _coord = _coords[j];
        //        var line = turf.lineString(_coord);
        //        var curved = turf.bezierSpline(line);
        //        _lCoords.push(curved.geometry.coordinates);
        //    }
        //    _lFeatures[i].geometry.coordinates = _lCoords;
        //}

        var featureslines = (new ol.format.GeoJSON()).readFeatures(lines);
        var features = (new ol.format.GeoJSON()).readFeatures(pointGrid);
        features = features.concat(featureslines);
        for (var i = 0; i < features.length; i++) {
            features[i].getGeometry().transform("EPSG:4326", "EPSG:3857");
        }
        var source = new ol.source.Vector({
            features: features
        });
        var vector = new ol.layer.Vector({
            source: source,
            style: styleFunction
        });
        var map = new ol.Map({
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.WMTS({
                        name: "天地图全国矢量电子地图底图",
                        url: "http://t0.tianditu.gov.cn/vec_w/wmts?tk=fdcab2d88e293c189daf038cd01592e6",
                        layer: "vec",
                        style: "default",
                        matrixSet: "w",
                        format: "tiles",
                        wrapX: true,
                        tileGrid: new ol.tilegrid.WMTS({
                            origin: ol.extent.getTopLeft(projectionExtent),
                            resolutions: resolutions,
                            matrixIds: matrixIds
                        })
                    })
                }),
                new ol.layer.Tile({
                    source: new ol.source.WMTS({
                        name: "天地图全国矢量电子地图注记",
                        url: "http://t0.tianditu.gov.cn/cva_w/wmts?tk=fdcab2d88e293c189daf038cd01592e6",
                        layer: "cva",
                        style: "default",
                        matrixSet: "w",
                        format: "tiles",
                        wrapX: true,
                        tileGrid: new ol.tilegrid.WMTS({
                            origin: ol.extent.getTopLeft(projectionExtent),
                            resolutions: resolutions,
                            matrixIds: matrixIds
                        })
                    })
                }),
                vector
            ],
            target: 'map',
            view: new ol.View({
                center: [12577713.642017495, 2971206.770222437],
                zoom: 3
            })
        });
    </script>
</body>
</html>