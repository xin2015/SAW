
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="OpenLayers" />
    <title>OpenLayersIndex</title>
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css">
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "Microsoft YaHei"
        }

        #mapDiv {
            width: 100%;
            height: 100%
        }
    </style>
</head>
<body>
    <div id="mapDiv"></div>
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js"></script>
    <script src="~/Scripts/kriging.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        var params = {
            mapCenter: [113.30765, 23.120049],
            maxValue: 300,
            krigingModel: 'exponential',//model还可选'gaussian','spherical'
            krigingSigma2: 0,
            krigingAlpha: 100,
            canvasAlpha: 0.8,//canvas图层透明度
            colors: ["#00E400", "#FFFF00", "#FF7E00", "#FF0000", "#99004C", "#7E0023"] //["#00E400", "#FFFF00", "#FF7E00", "#FF0000", "#99004C", "#7E0023"]
        };
        var map = new ol.Map({
            target: 'mapDiv',
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                })
            ],
            view: new ol.View({
                projection: ol.proj.get('EPSG:4326'),
                center: params.mapCenter,
                zoom: 12
            })
        });


        $.getJSON("/Scripts/440100.json", function (result) {
            var gz = result;
            var lngMin = 180, lngMax = 0, latMin = 90, latMax = 0;
            var data = [];
            data.push([113.276181, 23.112184, Math.round(Math.random() * params.maxValue)]);
            data.push([113.262455, 23.100616, Math.round(Math.random() * params.maxValue)]);
            data.push([113.280278, 23.103608, Math.round(Math.random() * params.maxValue)]);
            data.push([113.266983, 23.094699, Math.round(Math.random() * params.maxValue)]);
            data.push([113.283224, 23.096893, Math.round(Math.random() * params.maxValue)]);
            data.push([113.276181, 23.092305, Math.round(Math.random() * params.maxValue)]);
            data.push([113.278481, 23.081667, Math.round(Math.random() * params.maxValue)]);
            data.push([113.292423, 23.074286, Math.round(Math.random() * params.maxValue)]);
            data.push([113.287033, 23.088582, Math.round(Math.random() * params.maxValue)]);
            data.push([113.300687, 23.077345, Math.round(Math.random() * params.maxValue)]);
            data.push([113.28847, 23.099286, Math.round(Math.random() * params.maxValue)]);
            data.push([113.299537, 23.098289, Math.round(Math.random() * params.maxValue)]);
            data.push([113.314557, 23.101281, Math.round(Math.random() * params.maxValue)]);
            data.push([113.327133, 23.102012, Math.round(Math.random() * params.maxValue)]);
            data.push([113.329792, 23.11245, Math.round(Math.random() * params.maxValue)]);
            data.push([113.328211, 23.083728, Math.round(Math.random() * params.maxValue)]);
            data.push([113.304065, 23.069964, Math.round(Math.random() * params.maxValue)]);
            data.push([113.34165, 23.102079, Math.round(Math.random() * params.maxValue)]);
            var values = [], lngs = [], lats = [];
            for (var i = 0; i < 18; i++) {
                lngs.push(data[i][0]);
                lats.push(data[i][1]);
                values.push(data[i][2]);

                //if (data[i][0] < lngMin) {
                //    lngMin = data[i][0];
                //}
                //if (data[i][0] > lngMax) {
                //    lngMax = data[i][0];
                //}
                //if (data[i][1] < latMin) {
                //    latMin = data[i][1];
                //}
                //if (data[i][1] > latMax) {
                //    latMax = data[i][1];
                //}
            }
            var polygons = gz.features[0].geometry.coordinates[0];
            for (var i = 0; i < 11; i++) {
                var item = polygons[0][i];
                if (item[0] < lngMin) {
                    lngMin = item[0];
                }
                if (item[0] > lngMax) {
                    lngMax = item[0]
                }
                if (item[1] < latMin) {
                    latMin = item[1];
                }
                if (item[1] > latMax) {
                    latMax = item[1];
                }
            }
            console.log(polygons);
            var variogram = kriging.train(values, lngs, lats, params.krigingModel, params.krigingSigma2, params.krigingAlpha);
            var grid = kriging.grid(polygons, variogram, (lngMax - lngMin) / 1000);
            var canvasLayer = new ol.layer.Image({
                source: new ol.source.ImageCanvas({
                    canvasFunction: function (extent, resolution, pixelRatio, size, projection) {
                        var canvas = document.createElement('canvas');
                        canvas.width = size[0];
                        canvas.height = size[1];
                        canvas.style.display = 'block';
                        canvas.getContext('2d').globalAlpha = params.canvasAlpha;
                        kriging.plot(canvas, grid, [extent[0], extent[2]], [extent[1], extent[3]], params.colors);
                        return canvas;
                    },
                    projection: ol.proj.get('EPSG:4326')
                })
            });
            map.addLayer(canvasLayer);
        });
    </script>
</body>
</html>
