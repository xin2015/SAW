//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAW.WebApplication.DataCenterService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationHourData", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.WCF.Models")]
    [System.SerializableAttribute()]
    public partial class StationHourData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CO_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_8hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_8h_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnheathfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((object.ReferenceEquals(this.AQIField, value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO {
            get {
                return this.COField;
            }
            set {
                if ((object.ReferenceEquals(this.COField, value) != true)) {
                    this.COField = value;
                    this.RaisePropertyChanged("CO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO_24h {
            get {
                return this.CO_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.CO_24hField, value) != true)) {
                    this.CO_24hField = value;
                    this.RaisePropertyChanged("CO_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Measure {
            get {
                return this.MeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureField, value) != true)) {
                    this.MeasureField = value;
                    this.RaisePropertyChanged("Measure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2 {
            get {
                return this.NO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NO2Field, value) != true)) {
                    this.NO2Field = value;
                    this.RaisePropertyChanged("NO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2_24h {
            get {
                return this.NO2_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.NO2_24hField, value) != true)) {
                    this.NO2_24hField = value;
                    this.RaisePropertyChanged("NO2_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3 {
            get {
                return this.O3Field;
            }
            set {
                if ((object.ReferenceEquals(this.O3Field, value) != true)) {
                    this.O3Field = value;
                    this.RaisePropertyChanged("O3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_24h {
            get {
                return this.O3_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_24hField, value) != true)) {
                    this.O3_24hField = value;
                    this.RaisePropertyChanged("O3_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_8h {
            get {
                return this.O3_8hField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_8hField, value) != true)) {
                    this.O3_8hField = value;
                    this.RaisePropertyChanged("O3_8h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_8h_24h {
            get {
                return this.O3_8h_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_8h_24hField, value) != true)) {
                    this.O3_8h_24hField = value;
                    this.RaisePropertyChanged("O3_8h_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10 {
            get {
                return this.PM10Field;
            }
            set {
                if ((object.ReferenceEquals(this.PM10Field, value) != true)) {
                    this.PM10Field = value;
                    this.RaisePropertyChanged("PM10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10_24h {
            get {
                return this.PM10_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.PM10_24hField, value) != true)) {
                    this.PM10_24hField = value;
                    this.RaisePropertyChanged("PM10_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5 {
            get {
                return this.PM2_5Field;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5Field, value) != true)) {
                    this.PM2_5Field = value;
                    this.RaisePropertyChanged("PM2_5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5_24h {
            get {
                return this.PM2_5_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5_24hField, value) != true)) {
                    this.PM2_5_24hField = value;
                    this.RaisePropertyChanged("PM2_5_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionName {
            get {
                return this.PositionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionNameField, value) != true)) {
                    this.PositionNameField = value;
                    this.RaisePropertyChanged("PositionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityField, value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2 {
            get {
                return this.SO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SO2Field, value) != true)) {
                    this.SO2Field = value;
                    this.RaisePropertyChanged("SO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2_24h {
            get {
                return this.SO2_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.SO2_24hField, value) != true)) {
                    this.SO2_24hField = value;
                    this.RaisePropertyChanged("SO2_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationCode {
            get {
                return this.StationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StationCodeField, value) != true)) {
                    this.StationCodeField = value;
                    this.RaisePropertyChanged("StationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unheathful {
            get {
                return this.UnheathfulField;
            }
            set {
                if ((object.ReferenceEquals(this.UnheathfulField, value) != true)) {
                    this.UnheathfulField = value;
                    this.RaisePropertyChanged("Unheathful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityHourData", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.WCF.Models")]
    [System.SerializableAttribute()]
    public partial class CityHourData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DescRankInCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DescRankInProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankInCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankInProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnheathfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((object.ReferenceEquals(this.AQIField, value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO {
            get {
                return this.COField;
            }
            set {
                if ((object.ReferenceEquals(this.COField, value) != true)) {
                    this.COField = value;
                    this.RaisePropertyChanged("CO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((this.CityCodeField.Equals(value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DescRankInCountry {
            get {
                return this.DescRankInCountryField;
            }
            set {
                if ((this.DescRankInCountryField.Equals(value) != true)) {
                    this.DescRankInCountryField = value;
                    this.RaisePropertyChanged("DescRankInCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DescRankInProvince {
            get {
                return this.DescRankInProvinceField;
            }
            set {
                if ((this.DescRankInProvinceField.Equals(value) != true)) {
                    this.DescRankInProvinceField = value;
                    this.RaisePropertyChanged("DescRankInProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Measure {
            get {
                return this.MeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureField, value) != true)) {
                    this.MeasureField = value;
                    this.RaisePropertyChanged("Measure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2 {
            get {
                return this.NO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NO2Field, value) != true)) {
                    this.NO2Field = value;
                    this.RaisePropertyChanged("NO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3 {
            get {
                return this.O3Field;
            }
            set {
                if ((object.ReferenceEquals(this.O3Field, value) != true)) {
                    this.O3Field = value;
                    this.RaisePropertyChanged("O3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10 {
            get {
                return this.PM10Field;
            }
            set {
                if ((object.ReferenceEquals(this.PM10Field, value) != true)) {
                    this.PM10Field = value;
                    this.RaisePropertyChanged("PM10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5 {
            get {
                return this.PM2_5Field;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5Field, value) != true)) {
                    this.PM2_5Field = value;
                    this.RaisePropertyChanged("PM2_5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityField, value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RankInCountry {
            get {
                return this.RankInCountryField;
            }
            set {
                if ((this.RankInCountryField.Equals(value) != true)) {
                    this.RankInCountryField = value;
                    this.RaisePropertyChanged("RankInCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RankInProvince {
            get {
                return this.RankInProvinceField;
            }
            set {
                if ((this.RankInProvinceField.Equals(value) != true)) {
                    this.RankInProvinceField = value;
                    this.RaisePropertyChanged("RankInProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2 {
            get {
                return this.SO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SO2Field, value) != true)) {
                    this.SO2Field = value;
                    this.RaisePropertyChanged("SO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unheathful {
            get {
                return this.UnheathfulField;
            }
            set {
                if ((object.ReferenceEquals(this.UnheathfulField, value) != true)) {
                    this.UnheathfulField = value;
                    this.RaisePropertyChanged("Unheathful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityDayData", Namespace="http://schemas.datacontract.org/2004/07/ForecastDataSystem.WCF.Models")]
    [System.SerializableAttribute()]
    public partial class CityDayData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AQIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CO_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DescRankInCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DescRankInProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NO2_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string O3_8h_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM10_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM2_5_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPollutantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankInCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RankInProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SO2_24hField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnheathfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AQI {
            get {
                return this.AQIField;
            }
            set {
                if ((object.ReferenceEquals(this.AQIField, value) != true)) {
                    this.AQIField = value;
                    this.RaisePropertyChanged("AQI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CO_24h {
            get {
                return this.CO_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.CO_24hField, value) != true)) {
                    this.CO_24hField = value;
                    this.RaisePropertyChanged("CO_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((this.CityCodeField.Equals(value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DescRankInCountry {
            get {
                return this.DescRankInCountryField;
            }
            set {
                if ((this.DescRankInCountryField.Equals(value) != true)) {
                    this.DescRankInCountryField = value;
                    this.RaisePropertyChanged("DescRankInCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DescRankInProvince {
            get {
                return this.DescRankInProvinceField;
            }
            set {
                if ((this.DescRankInProvinceField.Equals(value) != true)) {
                    this.DescRankInProvinceField = value;
                    this.RaisePropertyChanged("DescRankInProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Measure {
            get {
                return this.MeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureField, value) != true)) {
                    this.MeasureField = value;
                    this.RaisePropertyChanged("Measure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO2_24h {
            get {
                return this.NO2_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.NO2_24hField, value) != true)) {
                    this.NO2_24hField = value;
                    this.RaisePropertyChanged("NO2_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O3_8h_24h {
            get {
                return this.O3_8h_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.O3_8h_24hField, value) != true)) {
                    this.O3_8h_24hField = value;
                    this.RaisePropertyChanged("O3_8h_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM10_24h {
            get {
                return this.PM10_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.PM10_24hField, value) != true)) {
                    this.PM10_24hField = value;
                    this.RaisePropertyChanged("PM10_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM2_5_24h {
            get {
                return this.PM2_5_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.PM2_5_24hField, value) != true)) {
                    this.PM2_5_24hField = value;
                    this.RaisePropertyChanged("PM2_5_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPollutant {
            get {
                return this.PrimaryPollutantField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPollutantField, value) != true)) {
                    this.PrimaryPollutantField = value;
                    this.RaisePropertyChanged("PrimaryPollutant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityField, value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RankInCountry {
            get {
                return this.RankInCountryField;
            }
            set {
                if ((this.RankInCountryField.Equals(value) != true)) {
                    this.RankInCountryField = value;
                    this.RaisePropertyChanged("RankInCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RankInProvince {
            get {
                return this.RankInProvinceField;
            }
            set {
                if ((this.RankInProvinceField.Equals(value) != true)) {
                    this.RankInProvinceField = value;
                    this.RaisePropertyChanged("RankInProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SO2_24h {
            get {
                return this.SO2_24hField;
            }
            set {
                if ((object.ReferenceEquals(this.SO2_24hField, value) != true)) {
                    this.SO2_24hField = value;
                    this.RaisePropertyChanged("SO2_24h");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimePoint {
            get {
                return this.TimePointField;
            }
            set {
                if ((this.TimePointField.Equals(value) != true)) {
                    this.TimePointField = value;
                    this.RaisePropertyChanged("TimePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unheathful {
            get {
                return this.UnheathfulField;
            }
            set {
                if ((object.ReferenceEquals(this.UnheathfulField, value) != true)) {
                    this.UnheathfulField = value;
                    this.RaisePropertyChanged("Unheathful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataCenterService.IDataCenterService")]
    public interface IDataCenterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataFromLiveResponse")]
        SAW.WebApplication.DataCenterService.StationHourData GetStationHourDataFromLive(string userName, string password, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataFromLiveResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData> GetStationHourDataFromLiveAsync(string userName, string password, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataListFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataListFromLiveResponse")]
        SAW.WebApplication.DataCenterService.StationHourData[] GetStationHourDataListFromLive(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataListFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataListFromLiveResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData[]> GetStationHourDataListFromLiveAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataFromHistoryResponse")]
        SAW.WebApplication.DataCenterService.StationHourData GetStationHourDataFromHistory(string userName, string password, string code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataFromHistoryResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData> GetStationHourDataFromHistoryAsync(string userName, string password, string code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataListFromHistoryByTime", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataListFromHistoryByTimeResp" +
            "onse")]
        SAW.WebApplication.DataCenterService.StationHourData[] GetStationHourDataListFromHistoryByTime(string userName, string password, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataListFromHistoryByTime", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataListFromHistoryByTimeResp" +
            "onse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData[]> GetStationHourDataListFromHistoryByTimeAsync(string userName, string password, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataListFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataListFromHistoryResponse")]
        SAW.WebApplication.DataCenterService.StationHourData[] GetStationHourDataListFromHistory(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetStationHourDataListFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetStationHourDataListFromHistoryResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData[]> GetStationHourDataListFromHistoryAsync(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataFromLiveResponse")]
        SAW.WebApplication.DataCenterService.CityHourData GetCityHourDataFromLive(string userName, string password, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataFromLiveResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData> GetCityHourDataFromLiveAsync(string userName, string password, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataListFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataListFromLiveResponse")]
        SAW.WebApplication.DataCenterService.CityHourData[] GetCityHourDataListFromLive(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataListFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataListFromLiveResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData[]> GetCityHourDataListFromLiveAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataFromHistoryResponse")]
        SAW.WebApplication.DataCenterService.CityHourData GetCityHourDataFromHistory(string userName, string password, string code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataFromHistoryResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData> GetCityHourDataFromHistoryAsync(string userName, string password, string code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataListFromHistoryByTime", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataListFromHistoryByTimeRespons" +
            "e")]
        SAW.WebApplication.DataCenterService.CityHourData[] GetCityHourDataListFromHistoryByTime(string userName, string password, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataListFromHistoryByTime", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataListFromHistoryByTimeRespons" +
            "e")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData[]> GetCityHourDataListFromHistoryByTimeAsync(string userName, string password, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataListFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataListFromHistoryResponse")]
        SAW.WebApplication.DataCenterService.CityHourData[] GetCityHourDataListFromHistory(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityHourDataListFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetCityHourDataListFromHistoryResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData[]> GetCityHourDataListFromHistoryAsync(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataFromLiveResponse")]
        SAW.WebApplication.DataCenterService.CityDayData GetCityDayDataFromLive(string userName, string password, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataFromLiveResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData> GetCityDayDataFromLiveAsync(string userName, string password, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataListFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataListFromLiveResponse")]
        SAW.WebApplication.DataCenterService.CityDayData[] GetCityDayDataListFromLive(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataListFromLive", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataListFromLiveResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData[]> GetCityDayDataListFromLiveAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataFromHistoryResponse")]
        SAW.WebApplication.DataCenterService.CityDayData GetCityDayDataFromHistory(string userName, string password, string code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataFromHistoryResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData> GetCityDayDataFromHistoryAsync(string userName, string password, string code, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataListFromHistoryByTime", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataListFromHistoryByTimeResponse" +
            "")]
        SAW.WebApplication.DataCenterService.CityDayData[] GetCityDayDataListFromHistoryByTime(string userName, string password, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataListFromHistoryByTime", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataListFromHistoryByTimeResponse" +
            "")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData[]> GetCityDayDataListFromHistoryByTimeAsync(string userName, string password, System.DateTime timePoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataListFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataListFromHistoryResponse")]
        SAW.WebApplication.DataCenterService.CityDayData[] GetCityDayDataListFromHistory(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataCenterService/GetCityDayDataListFromHistory", ReplyAction="http://tempuri.org/IDataCenterService/GetCityDayDataListFromHistoryResponse")]
        System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData[]> GetCityDayDataListFromHistoryAsync(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataCenterServiceChannel : SAW.WebApplication.DataCenterService.IDataCenterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataCenterServiceClient : System.ServiceModel.ClientBase<SAW.WebApplication.DataCenterService.IDataCenterService>, SAW.WebApplication.DataCenterService.IDataCenterService {
        
        public DataCenterServiceClient() {
        }
        
        public DataCenterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataCenterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataCenterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataCenterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SAW.WebApplication.DataCenterService.StationHourData GetStationHourDataFromLive(string userName, string password, string code) {
            return base.Channel.GetStationHourDataFromLive(userName, password, code);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData> GetStationHourDataFromLiveAsync(string userName, string password, string code) {
            return base.Channel.GetStationHourDataFromLiveAsync(userName, password, code);
        }
        
        public SAW.WebApplication.DataCenterService.StationHourData[] GetStationHourDataListFromLive(string userName, string password) {
            return base.Channel.GetStationHourDataListFromLive(userName, password);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData[]> GetStationHourDataListFromLiveAsync(string userName, string password) {
            return base.Channel.GetStationHourDataListFromLiveAsync(userName, password);
        }
        
        public SAW.WebApplication.DataCenterService.StationHourData GetStationHourDataFromHistory(string userName, string password, string code, System.DateTime timePoint) {
            return base.Channel.GetStationHourDataFromHistory(userName, password, code, timePoint);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData> GetStationHourDataFromHistoryAsync(string userName, string password, string code, System.DateTime timePoint) {
            return base.Channel.GetStationHourDataFromHistoryAsync(userName, password, code, timePoint);
        }
        
        public SAW.WebApplication.DataCenterService.StationHourData[] GetStationHourDataListFromHistoryByTime(string userName, string password, System.DateTime timePoint) {
            return base.Channel.GetStationHourDataListFromHistoryByTime(userName, password, timePoint);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData[]> GetStationHourDataListFromHistoryByTimeAsync(string userName, string password, System.DateTime timePoint) {
            return base.Channel.GetStationHourDataListFromHistoryByTimeAsync(userName, password, timePoint);
        }
        
        public SAW.WebApplication.DataCenterService.StationHourData[] GetStationHourDataListFromHistory(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetStationHourDataListFromHistory(userName, password, code, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.StationHourData[]> GetStationHourDataListFromHistoryAsync(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetStationHourDataListFromHistoryAsync(userName, password, code, startTime, endTime);
        }
        
        public SAW.WebApplication.DataCenterService.CityHourData GetCityHourDataFromLive(string userName, string password, string code) {
            return base.Channel.GetCityHourDataFromLive(userName, password, code);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData> GetCityHourDataFromLiveAsync(string userName, string password, string code) {
            return base.Channel.GetCityHourDataFromLiveAsync(userName, password, code);
        }
        
        public SAW.WebApplication.DataCenterService.CityHourData[] GetCityHourDataListFromLive(string userName, string password) {
            return base.Channel.GetCityHourDataListFromLive(userName, password);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData[]> GetCityHourDataListFromLiveAsync(string userName, string password) {
            return base.Channel.GetCityHourDataListFromLiveAsync(userName, password);
        }
        
        public SAW.WebApplication.DataCenterService.CityHourData GetCityHourDataFromHistory(string userName, string password, string code, System.DateTime timePoint) {
            return base.Channel.GetCityHourDataFromHistory(userName, password, code, timePoint);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData> GetCityHourDataFromHistoryAsync(string userName, string password, string code, System.DateTime timePoint) {
            return base.Channel.GetCityHourDataFromHistoryAsync(userName, password, code, timePoint);
        }
        
        public SAW.WebApplication.DataCenterService.CityHourData[] GetCityHourDataListFromHistoryByTime(string userName, string password, System.DateTime timePoint) {
            return base.Channel.GetCityHourDataListFromHistoryByTime(userName, password, timePoint);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData[]> GetCityHourDataListFromHistoryByTimeAsync(string userName, string password, System.DateTime timePoint) {
            return base.Channel.GetCityHourDataListFromHistoryByTimeAsync(userName, password, timePoint);
        }
        
        public SAW.WebApplication.DataCenterService.CityHourData[] GetCityHourDataListFromHistory(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityHourDataListFromHistory(userName, password, code, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityHourData[]> GetCityHourDataListFromHistoryAsync(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityHourDataListFromHistoryAsync(userName, password, code, startTime, endTime);
        }
        
        public SAW.WebApplication.DataCenterService.CityDayData GetCityDayDataFromLive(string userName, string password, string code) {
            return base.Channel.GetCityDayDataFromLive(userName, password, code);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData> GetCityDayDataFromLiveAsync(string userName, string password, string code) {
            return base.Channel.GetCityDayDataFromLiveAsync(userName, password, code);
        }
        
        public SAW.WebApplication.DataCenterService.CityDayData[] GetCityDayDataListFromLive(string userName, string password) {
            return base.Channel.GetCityDayDataListFromLive(userName, password);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData[]> GetCityDayDataListFromLiveAsync(string userName, string password) {
            return base.Channel.GetCityDayDataListFromLiveAsync(userName, password);
        }
        
        public SAW.WebApplication.DataCenterService.CityDayData GetCityDayDataFromHistory(string userName, string password, string code, System.DateTime timePoint) {
            return base.Channel.GetCityDayDataFromHistory(userName, password, code, timePoint);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData> GetCityDayDataFromHistoryAsync(string userName, string password, string code, System.DateTime timePoint) {
            return base.Channel.GetCityDayDataFromHistoryAsync(userName, password, code, timePoint);
        }
        
        public SAW.WebApplication.DataCenterService.CityDayData[] GetCityDayDataListFromHistoryByTime(string userName, string password, System.DateTime timePoint) {
            return base.Channel.GetCityDayDataListFromHistoryByTime(userName, password, timePoint);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData[]> GetCityDayDataListFromHistoryByTimeAsync(string userName, string password, System.DateTime timePoint) {
            return base.Channel.GetCityDayDataListFromHistoryByTimeAsync(userName, password, timePoint);
        }
        
        public SAW.WebApplication.DataCenterService.CityDayData[] GetCityDayDataListFromHistory(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityDayDataListFromHistory(userName, password, code, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task<SAW.WebApplication.DataCenterService.CityDayData[]> GetCityDayDataListFromHistoryAsync(string userName, string password, string code, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetCityDayDataListFromHistoryAsync(userName, password, code, startTime, endTime);
        }
    }
}
